---
import Logo from './Logo.astro'

interface Props {
  active: string
}

const links = [
  { href: '/', label: 'Solution' },
  { href: '/waitlist', label: 'Waitlist' },
]

const { active } = Astro.props
---

<header class="fixed top-6 md:top-12 w-full z-50 px-6">
  <nav
    class="mx-auto flex max-w-xl sm:max-w-lg md:max-w-xl lg:max-w-4xl items-center justify-between p-4 sm:px-6 lg:px-8 bg-white/80 rounded-full border backdrop-blur"
    aria-label="Global"
  >
    <div class="hidden lg:flex lg:flex-1 lg:gap-x-12">
      {
        links.map(({ href, label }) => (
          <a
            href={href}
            class={`font-semibold leading-6 transition-all hover:text-blue-600 ${href === active ? 'text-blue-600' : 'text-gray-900'}`}
          >
            {label}
          </a>
        ))
      }
    </div>
    <div class="flex">
      <a href="/" class="-m-1.5 p-1.5">
        <Logo size="sm" />
      </a>
    </div>
    <div class="flex lg:hidden">
      <button
        id="mobile-menu-button"
        type="button"
        class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          aria-hidden="true"
          data-slot="icon"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
      </button>
    </div>
    <div class="hidden lg:flex lg:flex-1 lg:justify-end">
      <a
        href="/login"
        class={`font-semibold leading-6 hover:text-blue-600 ${active === '/login' ? 'text-blue-600' : 'text-gray-900'}`}
        >Log in <span aria-hidden="true">&rarr;</span></a
      >
    </div>
  </nav>
  <!-- Mobile menu, show/hide based on menu open state. -->
  <div class="hidden lg:hidden" role="dialog" aria-modal="true" id="mobile-menu" data-open="false">
    <!-- Background backdrop, show/hide based on slide-over state. -->
    <div class="fixed inset-0 z-10"></div>
    <div
      class="fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10"
    >
      <div class="flex items-center justify-between">
        <a href="/" class="-m-1.5 p-1.5">
          <Logo size="sm" />
        </a>
        <button
          type="button"
          id="mobile-menu-close-button"
          class="-m-2.5 rounded-md p-2.5 text-gray-700"
        >
          <span class="sr-only">Close menu</span>
          <svg
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
            data-slot="icon"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-gray-500/10">
          <div class="space-y-2 py-6">
            {
              links.map(({ href, label }) => (
                <a
                  href={href}
                  class={`-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50 ${href === active ? 'bg-gray-50' : ''}`}
                >
                  {label}
                </a>
              ))
            }
          </div>
          <div class="py-6">
            <a
              href="/login"
              class={`-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50 ${active === '/login' ? 'bg-gray-50' : ''}`}
              >Log in</a
            >
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script is:inline>
  document.querySelector('#mobile-menu-button').addEventListener('click', () => {
    if (document.querySelector('#mobile-menu').dataset.open === 'false') {
      document.querySelector('#mobile-menu').dataset.open = 'true'
      document.querySelector('#mobile-menu').classList.remove('hidden')
    } else {
      document.querySelector('#mobile-menu').dataset.open = 'false'
    }
  })

  document.querySelector('#mobile-menu-close-button').addEventListener('click', () => {
    document.querySelector('#mobile-menu').dataset.open = 'false'
    document.querySelector('#mobile-menu').classList.add('hidden')
  })
</script>
